#!/bin/bash
#
# Install packages based on the detected operating system.
#
# Hash of packages config file for change detection:
# packages.yaml hash: {{ include ".chezmoidata/packages.yaml" | sha256sum }}
#
############################################################################################
####[ Global Variables ]####################################################################


C_OS="$(uname -s)"
C_YELLOW="$(printf '\033[1;33m')"
C_GREEN="$(printf '\033[0;32m')"
C_BLUE="$(printf '\033[0;34m')"
C_CYAN="$(printf '\033[0;36m')"
C_RED="$(printf '\033[1;31m')"
C_NC="$(printf '\033[0m')"
readonly C_OS C_YELLOW C_GREEN C_BLUE C_RED C_CYAN C_NC

readonly C_WARNING="${C_YELLOW}==>${C_NC} "
readonly C_SUCCESS="${C_GREEN}==>${C_NC} "
readonly C_ERROR="${C_RED}ERROR:${C_NC} "
readonly C_INFO="${C_BLUE}==>${C_NC} "
readonly C_NOTE="${C_CYAN}==>${C_NC} "

# Global variable for caching installed packages.
installed_packages=""


####[ Functions ]###########################################################################


####
# Checks the global installed_packages cache for the package. If not found, it runs the
# provided install command. Upon a successful installation, it appends the package to the
# cache.
#
# PARAMETERS:
#   - $1: pkg (required)
#     - The name of the package to check/install.
#   - $@: install_cmd
#     - The command to run for installing the package, followed by its arguments.
install_from_cache() {
    local pkg="$1"
    shift  # Remove first argument, rest are the command and its arguments.
    local install_cmd=("$@")

    if grep -Fxq "$pkg" <<< "$installed_packages"; then
        echo "${C_NOTE}  '$pkg' is already installed"
    else
        echo "${C_INFO}  Installing '$pkg'..."
        if "${install_cmd[@]}"; then
            # Update the cache so subsequent checks see this package as installed.
            installed_packages+=$'\n'"$pkg"
        else
            echo "${C_ERROR}  Failed to install '$pkg'" >&2
        fi
    fi
}


####[ Main ]################################################################################


echo "${C_INFO}Starting package installation process..."

if [[ $EUID -ne 0 && $C_OS != "Darwin" ]]; then
    echo "${C_NOTE}This step requires administrative rights"
    read -rp "${C_NOTE}Do you want to continue? [y/N]: " answer

    if [[ ! $answer =~ ^[Yy]$ ]]; then
        echo "${C_WARNING}Operation cancelled" >&2
        echo ""
        exit 0
    fi
fi

# shellcheck disable=SC1009,SC1054,SC1056,SC1072,SC1073,SC1083
case "$C_OS" in
    linux)
        if command -v pacman >/dev/null; then
            echo "${C_INFO}Updating package lists..."
            sudo pacman -Syu --noconfirm

            echo "${C_INFO}Retrieving installed packages..."
            installed_packages="$(pacman -Qq)"

            echo "${C_INFO}Installing general packages..."
            {{- range .packages.linux.general }}
            install_from_cache "{{ . }}" sudo pacman -S --noconfirm --needed "{{ . }}"
            {{- end }}

            echo "${C_INFO}Installing pacman-specific packages..."
            {{- range .packages.linux.pacman }}
            install_from_cache "{{ . }}" sudo pacman -S --noconfirm --needed "{{ . }}"
            {{- end }}
        elif command -v apt >/dev/null; then
            echo "${C_INFO}Updating package lists..."
            sudo apt-get update

            echo "${C_INFO}Retrieving installed packages..."
            installed_packages="$(dpkg-query -W -f='${binary:Package}\n')"

            echo "${C_INFO}Installing general packages..."
            {{- range .packages.linux.general }}
            install_from_cache "{{ . }}" sudo apt-get install -y "{{ . }}"
            {{- end }}

            echo "${C_INFO}Installing apt-specific packages..."
            {{- range .packages.linux.apt }}
            install_from_cache "{{ . }}" sudo apt-get install -y "{{ . }}"
            {{- end }}
        fi
        ;;

    darwin)
        echo "${C_INFO}Retrieving installed Homebrew formulas..."
        installed_packages="$( { brew list --formula; brew list --cask; } | sort -u )"

        echo "${C_INFO}Installing Homebrew formulas..."
        {{- range .packages.macos.homebrew.formulas }}
        install_from_cache "{{ . }}" brew install "{{ . }}"
        {{- end }}

        echo "${C_INFO}Installing Homebrew casks..."
        {{- range .packages.macos.homebrew.casks }}
        install_from_cache "{{ . }}" brew install --cask "{{ . }}"
        {{- end }}
        ;;

    *)
        echo "${C_ERROR}Unsupported operating system: $C_OS" >&2
        echo "${C_NOTE}Skipping package installation"
        echo ""
        exit 1
        ;;
esac
# shellcheck enable=SC1009,SC1054,SC1072,SC1073,SC1083

echo "${C_SUCCESS}Package installation completed"
echo ""
