#!/bin/bash
#
# Install packages based on the detected operating system.
#
########################################################################################
####[ Global Variables ]################################################################


## Used to colorize output.
C_YELLOW="$(printf '\033[1;33m')"
C_GREEN="$(printf '\033[0;32m')"
C_BLUE="$(printf '\033[0;34m')"
C_CYAN="$(printf '\033[0;36m')"
C_RED="$(printf '\033[1;31m')"
C_NC="$(printf '\033[0m')"
readonly C_GREEN C_BLUE C_CYAN C_RED C_NC

## Short-hand colorized messages.
readonly C_SUCCESS="${C_GREEN}==>${C_NC} "
readonly C_WARNING="${C_YELLOW}==>${C_NC} "
readonly C_ERROR="${C_RED}ERROR:${C_NC} "
readonly C_INFO="${C_BLUE}==>${C_NC} "
readonly C_NOTE="${C_CYAN}==>${C_NC} "


####[ Prepping ]########################################################################


# Permissions only need to be checked on Linux, as Homebrew on macOS doesn't require
# elevated permissions.
if [[ {{ .chezmoi.os }} == "linux" ]]; then
    echo "${C_INFO}Checking user permissions..."
    echo "${C_INFO}    Executing: 'sudo -l'"
    if sudo -l &> /dev/null; then
        echo "${C_SUCCESS}'${USER}' has permissions to install packages"
    else
        echo "${C_WARNING}'${USER}' does not have permissions to install packages"
        echo "${C_INFO}Skipping package installation..."
        exit
    fi
fi


####[ Main ]############################################################################


case "{{ .chezmoi.os }}" in
  linux)
    echo "${C_INFO}Installing packages for Linux..."

    # Install general packages
    if hash pacman &> /dev/null; then
        echo "${C_INFO}Updating package lists..."
        sudo pacman -Sy --noconfirm
        echo "${C_INFO}Installing general packages..."
        {{- range .packages.linux.general }}
        if pacman -Q "{{ . }}" &> /dev/null; then
            echo "${C_NOTE}'{{ . }}' is already installed"
            echo "${C_INFO}Skipping..."
        else
            echo "${C_INFO}Installing '{{ . }}'..."
            sudo pacman -S --noconfirm --needed "{{ . }}"
        fi
        {{- end }}
    elif hash apt &> /dev/null; then
        echo "${C_INFO}Updating package lists..."
        sudo apt update
        echo "${C_INFO}Installing general packages..."
        {{- range .packages.linux.general }}
        if dpkg -l "{{ . }}" &> /dev/null; then
            echo "${C_NOTE}'{{ . }}' is already installed"
            echo "${C_INFO}Skipping..."
        else
            echo "${C_INFO}Installing '{{ . }}'..."
            sudo apt install -y "{{ . }}"
        fi
        {{- end }}
    fi

    # Install Pacman-specific packages
    if hash pacman &> /dev/null; then
        echo "${C_INFO}Installing pacman-specific packages..."
        {{- range .packages.linux.pacman }}
        if pacman -Q "{{ . }}" &> /dev/null; then
            echo "${C_NOTE}'{{ . }}' is already installed"
            echo "${C_INFO}Skipping..."
        else
            echo "${C_INFO}Installing '{{ . }}'..."
            sudo pacman -S --noconfirm --needed "{{ . }}"
        fi
        {{- end }}
    fi

    # Install APT-specific packages
    if hash apt &> /dev/null; then
        echo "${C_INFO}Installing apt-specific packages..."
        {{- range .packages.linux.apt }}
        if dpkg -l "{{ . }}" &> /dev/null; then
            echo "${C_NOTE}'{{ . }}' is already installed"
            echo "${C_INFO}Skipping..."
        else
            echo "${C_INFO}Installing '{{ . }}'..."
            sudo apt install -y "{{ . }}"
        fi
        {{- end }}
    fi
    ;;

  darwin)
    echo "${C_INFO}Installing packages for macOS..."

    # Install Homebrew packages
    echo "${C_INFO}Installing Homebrew formulas..."
    {{- range .packages.macos.homebrew.formulas }}
    if brew list -1 | grep "{{ . }}" &> /dev/null; then
        echo "${C_NOTE}'{{ . }}' is already installed"
        echo "${C_INFO}Skipping..."
    else
        echo "${C_INFO}Installing '{{ . }}'..."
        brew install "{{ . }}"
    fi
    {{- end }}
    ;;

  *)
    echo "${C_ERROR}Unsupported operating system: {{ .chezmoi.os }}"
    exit 1
    ;;
esac

echo "${C_SUCCESS}Package installation complete"

